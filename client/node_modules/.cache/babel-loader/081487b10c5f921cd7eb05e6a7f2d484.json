{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ALEX\\\\Downloads\\\\TicketTracerForServiceCenter-master\\\\TicketTracerForServiceCenter-master\\\\client\\\\src\\\\components\\\\List_User_Tickets.js\";\nimport React, { Fragment, useState, useEffect } from \"react\";\nimport { toast } from \"react-toastify\";\nimport moment from 'moment';\n\nconst List_User_Tickets = ({\n  setAuth\n}) => {\n  const [tickets, setTickets] = useState([]);\n\n  const getTickets = async () => {\n    try {\n      const response = await fetch(\"http://localhost:5000/dashboard/tickets/\", {\n        method: \"GET\",\n        headers: {\n          token: localStorage.token\n        }\n      });\n      const jsonData = await response.json();\n      setTickets(jsonData);\n    } catch (err) {\n      console.log(err.message);\n    }\n  };\n\n  useEffect(() => {\n    getTickets();\n  }, []);\n  console.log(tickets);\n  return /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }\n  }, \" List of User Tickets \"), \" \", /*#__PURE__*/React.createElement(\"table\", {\n    id: \"userList\",\n    className: \"table mt-5 text-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"thead\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 25\n    }\n  }, \" ID \"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 25\n    }\n  }, \" ID OWNER \"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 25\n    }\n  }, \" ID ASSIGNED \"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 25\n    }\n  }, \" ID ISSUE \"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 25\n    }\n  }, \" INFORMATION \"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 25\n    }\n  }, \" DATE OPEN \"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 25\n    }\n  }, \" DATE CLOSED \"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 25\n    }\n  }, \" STATUS \"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 25\n    }\n  }, \" PRIORITY \"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 25\n    }\n  }, \" STATUS \"))), /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 17\n    }\n  }, tickets.map(ticket => /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 29\n    }\n  }, ticket.ticket_id), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 29\n    }\n  }, ticket.ticket_owner_id), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 29\n    }\n  }, ticket.ticket_assigned_employee_id), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 29\n    }\n  }, ticket.ticket_issue_id), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 29\n    }\n  }, ticket.ticket_information), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 29\n    }\n  }, \"Date.parse(\", ticket.ticket_date_open, \")\"), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 29\n    }\n  }, ticket.ticket_date_closed), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 29\n    }\n  }, ticket.ticket_status), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 29\n    }\n  }, ticket.ticket_priority), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 29\n    }\n  }, ticket.ticket_rating))))));\n};\n\nexport default List_User_Tickets;","map":{"version":3,"sources":["C:/Users/ALEX/Downloads/TicketTracerForServiceCenter-master/TicketTracerForServiceCenter-master/client/src/components/List_User_Tickets.js"],"names":["React","Fragment","useState","useEffect","toast","moment","List_User_Tickets","setAuth","tickets","setTickets","getTickets","response","fetch","method","headers","token","localStorage","jsonData","json","err","console","log","message","map","ticket","ticket_id","ticket_owner_id","ticket_assigned_employee_id","ticket_issue_id","ticket_information","ticket_date_open","ticket_date_closed","ticket_status","ticket_priority","ticket_rating"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,QAA1B,EAAoCC,SAApC,QAAqD,OAArD;AACA,SAASC,KAAT,QAAsB,gBAAtB;AACA,OAAOC,MAAP,MAAmB,QAAnB;;AAEA,MAAMC,iBAAiB,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAiB;AAEvC,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBP,QAAQ,CAAC,EAAD,CAAtC;;AAEA,QAAMQ,UAAU,GAAG,YAAW;AAC1B,QAAI;AAEA,YAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,0CAAD,EAA4C;AACpEC,QAAAA,MAAM,EAAE,KAD4D;AAEpEC,QAAAA,OAAO,EAAE;AAAEC,UAAAA,KAAK,EAAEC,YAAY,CAACD;AAAtB;AAF2D,OAA5C,CAA5B;AAQA,YAAME,QAAQ,GAAG,MAAMN,QAAQ,CAACO,IAAT,EAAvB;AAGAT,MAAAA,UAAU,CAACQ,QAAD,CAAV;AACH,KAdD,CAcE,OAAOE,GAAP,EAAY;AACVC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAG,CAACG,OAAhB;AACH;AACJ,GAlBD;;AAoBAnB,EAAAA,SAAS,CAAC,MAAM;AACZO,IAAAA,UAAU;AACb,GAFQ,EAEN,EAFM,CAAT;AAIAU,EAAAA,OAAO,CAACC,GAAR,CAAYb,OAAZ;AAKA,sBACI,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BADJ,EAEK,GAFL,eAGI;AAAO,IAAA,EAAE,EAAC,UAAV;AAAqB,IAAA,SAAS,EAAC,wBAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFJ,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAHJ,eAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAJJ,eAKI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBALJ,eAMI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBANJ,eAOI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAPJ,eAQI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBARJ,eASI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBATJ,eAUI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAVJ,CADJ,CADJ,eAeI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAaKA,OAAO,CAACe,GAAR,CAAaC,MAAM,iBAChB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAMA,MAAM,CAACC,SAAb,CADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKD,MAAM,CAACE,eAAZ,CAFJ,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKF,MAAM,CAACG,2BAAZ,CAHJ,eAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKH,MAAM,CAACI,eAAZ,CAJJ,eAKI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKJ,MAAM,CAACK,kBAAZ,CALJ,eAMI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAgBL,MAAM,CAACM,gBAAvB,MANJ,eAOI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKN,MAAM,CAACO,kBAAZ,CAPJ,eAQI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKP,MAAM,CAACQ,aAAZ,CARJ,eASI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKR,MAAM,CAACS,eAAZ,CATJ,eAUI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKT,MAAM,CAACU,aAAZ,CAVJ,CADH,CAbL,CAfJ,CAHJ,CADJ;AAmDH,CApFD;;AAsFA,eAAe5B,iBAAf","sourcesContent":["import React, { Fragment, useState, useEffect } from \"react\";\r\nimport { toast } from \"react-toastify\";\r\nimport moment from 'moment';\r\n\r\nconst List_User_Tickets = ({ setAuth }) => {\r\n\r\n    const [tickets, setTickets] = useState([]);\r\n\r\n    const getTickets = async() => {\r\n        try {\r\n\r\n            const response = await fetch(\"http://localhost:5000/dashboard/tickets/\",{\r\n                method: \"GET\",\r\n                headers: { token: localStorage.token },\r\n              });\r\n            \r\n            \r\n            \r\n            \r\n            const jsonData = await response.json() \r\n\r\n            \r\n            setTickets(jsonData);\r\n        } catch (err) {\r\n            console.log(err.message);\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        getTickets();\r\n    }, []);\r\n\r\n    console.log(tickets);\r\n\r\n\r\n    \r\n\r\n    return(\r\n        <Fragment>\r\n            <h1> List of User Tickets </h1>\r\n            {\" \"}\r\n            <table id=\"userList\" className=\"table mt-5 text-center\">\r\n                <thead>\r\n                    <tr>\r\n                        <th> ID </th>\r\n                        <th> ID OWNER </th>\r\n                        <th> ID ASSIGNED </th>\r\n                        <th> ID ISSUE </th>\r\n                        <th> INFORMATION </th>\r\n                        <th > DATE OPEN </th>\r\n                        <th> DATE CLOSED </th>\r\n                        <th> STATUS </th>\r\n                        <th> PRIORITY </th>\r\n                        <th> STATUS </th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {/*<tr>\r\n                        <td> ID </td>\r\n                        <td> ID </td>\r\n                        <td> ID </td>\r\n                        <td> ID </td>\r\n                        <td> Info </td>\r\n                        <td> Date_open </td> \r\n                        <td> Date_closed </td>\r\n                        <td> Status </td>\r\n                        <td> Priority </td>\r\n                        <td> Status </td> \r\n                    </tr>  */}\r\n                    {tickets.map (ticket => (\r\n                        <tr>\r\n                            <td >{ticket.ticket_id}</td>\r\n                            <td>{ticket.ticket_owner_id}</td>\r\n                            <td>{ticket.ticket_assigned_employee_id}</td>\r\n                            <td>{ticket.ticket_issue_id}</td>\r\n                            <td>{ticket.ticket_information}</td>\r\n                            <td>Date.parse({ticket.ticket_date_open})</td>\r\n                            <td>{ticket.ticket_date_closed}</td>\r\n                            <td>{ticket.ticket_status}</td>\r\n                            <td>{ticket.ticket_priority}</td>\r\n                            <td>{ticket.ticket_rating}</td>\r\n                        </tr>\r\n                    ))}\r\n                </tbody>\r\n            </table>\r\n            \r\n        </Fragment>\r\n    );\r\n};\r\n\r\nexport default List_User_Tickets;"]},"metadata":{},"sourceType":"module"}